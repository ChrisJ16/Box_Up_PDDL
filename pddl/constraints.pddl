(define (domain boxUp)
    (:requirements :negative-preconditions)
    (:predicates
        (object-at ?object ?x ?y)
        (is-empty ?x ?y)
        (faces-north ?object)
        (faces-south ?object)
        (faces-east ?object)
        (faces-west ?object)
        (next-row ?x1 ?x2)
        (next-col ?y1 ?y2)
        (object-in ?object1 ?object2)
        (iwp ?object)
        (is-small ?object)
        (is-large ?object)
        (is-inside ?object)
    )

    ;only point moves
    (:action move-point-down
        :parameters (?point ?old-x ?new-x ?y)
        :precondition (and 
            (object-at ?point ?old-x ?y)
            (is-empty ?new-x ?y)
            (next-row ?old-x ?new-x)
            (not (iwp ?point))
            (not (is-inside ?point))
        )
        :effect (and 
            (not (object-at ?point ?old-x ?y))
            (object-at ?point ?new-x ?y)
            (not (is-empty ?new-x ?y))
            (is-empty ?old-x ?y)
        )
    
    )

    (:action move-point-up
        :parameters (?point ?old-x ?new-x ?y)
        :precondition (and 
            (object-at ?point ?old-x ?y)
            (is-empty ?new-x ?y)
            (next-row ?new-x ?old-x)
            (not (iwp ?point))
            (not (is-inside ?point))
        )
        :effect (and 
            (not (object-at ?point ?old-x ?y))
            (object-at ?point ?new-x ?y)
            (not (is-empty ?new-x ?y))
            (is-empty ?old-x ?y)
        )
    
    )

    (:action move-point-left
        :parameters (?point ?x ?old-y ?new-y)
        :precondition (and 
            (object-at ?point ?x ?old-y)
            (is-empty ?x ?new-y)
            (next-col ?new-y ?old-y)
            (not (iwp ?point))
            (not (is-inside ?point))
        )
        :effect (and 
            (not (object-at ?point ?x ?old-y))
            (object-at ?point ?x ?new-y)
            (not (is-empty ?x ?new-y))
            (is-empty ?x ?old-y)
        )
    
    )

    (:action move-point-right
        :parameters (?point ?x ?old-y ?new-y)
        :precondition (and 
            (object-at ?point ?x ?old-y)
            (is-empty ?x ?new-y)
            (next-col ?old-y ?new-y)
            (not (iwp ?point))
            (not (is-inside ?point))
        )
        :effect (and 
            (not (object-at ?point ?x ?old-y))
            (object-at ?point ?x ?new-y)
            (not (is-empty ?x ?new-y))
            (is-empty ?x ?old-y)
        )
    
    )

    ;point moves in small piece
    (:action move-point-in-small-piece-down
        :parameters (?point ?piece ?old-x ?new-x ?y)
        :precondition (and 
            (not (is-inside ?point))
            (object-at ?point ?old-x ?y)
            (object-at ?piece ?new-x ?y)
            (is-small ?piece)
            (next-row ?old-x ?new-x)
            (faces-north ?piece)
            (not (iwp ?point))
        )
        :effect (and
            (not (object-at ?point ?old-x ?y))
            (object-at ?point ?new-x ?y)
            (object-in ?point ?piece)
            (is-empty ?old-x ?y)
            (is-inside ?point)
        )
    )

    (:action move-point-in-small-piece-up
        :parameters (?point ?piece ?old-x ?new-x ?y)
        :precondition (and 
            (not (is-inside ?point))
            (object-at ?point ?old-x ?y)
            (object-at ?piece ?new-x ?y)
            (is-small ?piece)
            (next-row ?new-x ?old-x)
            (faces-south ?piece)
            (not (iwp ?point))
        )
        :effect (and 
            (not (object-at ?point ?old-x ?y))
            (object-at ?point ?new-x ?y)
            (object-in ?point ?piece)
            (is-empty ?old-x ?y)
            (is-inside ?point)
        )
    )
    
    (:action move-point-in-small-piece-left
        :parameters (?point ?piece ?x ?old-y ?new-y)
        :precondition (and 
            (not (is-inside ?point))
            (object-at ?point ?x ?old-y)
            (object-at ?piece ?x ?new-y)
            (is-small ?piece)
            (next-col ?new-y ?old-y)
            (faces-east ?piece)
            (not (iwp ?point))
        )
        :effect (and 
            (not (object-at ?point ?x ?old-y))
            (object-at ?point ?x ?new-y)
            (object-in ?point ?piece)
            (is-empty ?x ?old-y)
            (is-inside ?point)
        )
    )

    (:action move-point-in-small-piece-right
        :parameters (?point ?piece ?x ?old-y ?new-y)
        :precondition (and 
            (not (is-inside ?point))
            (object-at ?point ?x ?old-y)
            (object-at ?piece ?x ?new-y)
            (is-small ?piece)
            (next-col ?old-y ?new-y)
            (faces-west ?piece)
            (not (iwp ?point))
        )
        :effect (and 
            (not (object-at ?point ?x ?old-y))
            (object-at ?point ?x ?new-y)
            (object-in ?point ?piece)
            (is-empty ?x ?old-y)
            (is-inside ?point)
        )
    )

    ;point moves with small piece
    (:action move-point-with-small-piece-down
        :parameters (?point ?piece ?old-x ?new-x ?y)
        :precondition (and 
            (object-at ?point ?old-x ?y)
            (object-at ?piece ?old-x ?y)
            (is-empty ?new-x ?y)
            (is-small ?piece)
            (next-row ?old-x ?new-x)
            (not (faces-south ?piece))
            (not (iwp ?point))
        )
        :effect (and 
            (not (object-at ?point ?old-x ?y))
            (not (object-at ?piece ?old-x ?y))
            (object-at ?point ?new-x ?y)
            (object-at ?piece ?new-x ?y)
            (is-empty ?old-x ?y)
            (not (is-empty ?new-x ?y))
        )
    )

    (:action move-point-with-small-piece-up
        :parameters (?point ?piece ?old-x ?new-x ?y)
        :precondition (and 
            (object-at ?point ?old-x ?y)
            (object-at ?piece ?old-x ?y)
            (is-small ?piece)
            (is-empty ?new-x ?y)
            (next-row ?new-x ?old-x)
            (not (faces-north ?piece))
            (not (iwp ?point))
        )
        :effect (and 
            (not (object-at ?point ?old-x ?y))
            (not (object-at ?piece ?old-x ?y))
            (object-at ?point ?new-x ?y)
            (object-at ?piece ?new-x ?y)
            (is-empty ?old-x ?y)
            (not (is-empty ?new-x ?y))
        )
    )

    (:action move-point-with-small-piece-left
        :parameters (?point ?piece ?x ?old-y ?new-y)
        :precondition (and 
            (object-at ?point ?x ?old-y)
            (object-at ?piece ?x ?old-y)
            (is-small ?piece)
            (next-col ?new-y ?old-y)
            (not (faces-west ?piece))
            (is-empty ?x ?new-y)
            (not (iwp ?point))
        )
        :effect (and 
            (not (object-at ?point ?x ?old-y))
            (not (object-at ?piece ?x ?old-y))
            (object-at ?point ?x ?new-y)
            (object-at ?piece ?x ?new-y)
            (is-empty ?x ?old-y)
            (not (is-empty ?x ?new-y))
        )
    )

    (:action move-point-with-small-piece-right
        :parameters (?point ?piece ?x ?old-y ?new-y)
        :precondition (and 
            (object-at ?point ?x ?old-y)
            (object-at ?piece ?x ?old-y)
            (is-small ?piece)
            (next-col ?old-y ?new-y)
            (not (faces-east ?piece))
            (is-empty ?x ?new-y)
            (not (iwp ?point))
        )
        :effect (and 
            (not (object-at ?point ?x ?old-y))
            (not (object-at ?piece ?x ?old-y))
            (object-at ?point ?x ?new-y)
            (object-at ?piece ?x ?new-y)
            (is-empty ?x ?old-y)
            (not (is-empty ?x ?new-y))
        )
    )


    ;point moves out of small piece

    (:action move-point-out-of-small-piece-down
        :parameters (?point ?piece ?old-x ?new-x ?y)
        :precondition (and 
            (object-at ?point ?old-x ?y)
            (object-at ?piece ?old-x ?y)
            (is-small ?piece)
            (is-empty ?new-x ?y)
            (next-row ?old-x ?new-x)
            (faces-south ?piece)
            (not (iwp ?point))
        )
        :effect (and 
            (not (object-at ?point ?old-x ?y))
            (object-at ?point ?new-x ?y)
            (not (object-in ?point ?piece))
            (not (is-inside ?point))
        )
    )

    (:action move-point-out-of-small-piece-up
        :parameters (?point ?piece ?old-x ?new-x ?y)
        :precondition (and 
            (object-at ?point ?old-x ?y)
            (object-at ?piece ?old-x ?y)
            (is-small ?piece)
            (is-empty ?new-x ?y)
            (next-row ?new-x ?old-x)
            (faces-north ?piece)
            (not (iwp ?point))
        )
        :effect (and 
            (not (object-at ?point ?old-x ?y))
            (object-at ?point ?new-x ?y)
            (not (object-in ?point ?piece))
            (not (is-inside ?point))
        )
    )

    (:action move-point-out-of-small-piece-left
        :parameters (?point ?piece ?x ?old-y ?new-y)
        :precondition (and 
            (object-at ?point ?x ?old-y)
            (object-at ?piece ?x ?old-y)
            (is-small ?piece)
            (next-col ?new-y ?old-y)
            (faces-west ?piece)
            (not (iwp ?point))
            (is-empty ?x ?new-y)
        )
        :effect (and 
            (not (object-at ?point ?x ?old-y))
            (object-at ?point ?x ?new-y)
            (not (object-in ?point ?piece))
            (not (is-inside ?point))
        )
    )

    (:action move-point-out-of-small-piece-right
        :parameters (?point ?piece ?x ?old-y ?new-y)
        :precondition (and 
            (object-at ?point ?x ?old-y)
            (object-at ?piece ?x ?old-y)
            (is-empty ?x ?new-y)
            (is-small ?piece)
            (next-col ?old-y ?new-y)
            (faces-east ?piece)
            (not (iwp ?point))
        )
        :effect (and 
            (not (object-at ?point ?x ?old-y))
            (object-at ?point ?x ?new-y)
            (not (object-in ?point ?piece))
            (not (is-inside ?point))
        )
    )

    ;point moves in large piece alone
    (:action move-point-in-large-piece-down
        :parameters (?point ?piece ?old-x ?new-x ?y)
        :precondition (and 
            (object-at ?point ?old-x ?y)
            (object-at ?piece ?new-x ?y)
            (is-large ?piece)
            (next-row ?old-x ?new-x)
            (faces-north ?piece)
            (not (iwp ?point))
            (not (is-inside ?point))
        )
        :effect (and
            (not (object-at ?point ?old-x ?y))
            (object-at ?point ?new-x ?y)
            (object-in ?point ?piece)
            (is-inside ?point)
            (is-empty ?old-x ?y)

        )
    )
    
    (:action move-point-in-large-piece-up
        :parameters (?point ?piece ?old-x ?new-x ?y)
        :precondition (and 
            (object-at ?point ?old-x ?y)
            (object-at ?piece ?new-x ?y)
            (is-large ?piece)
            (next-row ?new-x ?old-x)
            (faces-south ?piece)
            (not (iwp ?point))
            (not (is-inside ?point))
        )
        :effect (and 
            (not (object-at ?point ?old-x ?y))
            (object-at ?point ?new-x ?y)
            (object-in ?point ?piece)
            (is-inside ?point)
            (is-empty ?old-x ?y)
        )
    )
    
    (:action move-point-in-large-piece-left
        :parameters (?point ?piece ?x ?old-y ?new-y)
        :precondition (and 
            (object-at ?point ?x ?old-y)
            (object-at ?piece ?x ?new-y)
            (is-large ?piece)
            (next-col ?new-y ?old-y)
            (faces-east ?piece)
            (not (iwp ?point))
            (not (is-inside ?point))
        )
        :effect (and 
            (not (object-at ?point ?x ?old-y))
            (object-at ?point ?x ?new-y)
            (object-in ?point ?piece)
            (is-inside ?point)
            (is-empty ?x ?old-y)
        )
    )

    (:action move-point-in-large-piece-right
        :parameters (?point ?piece ?x ?old-y ?new-y)
        :precondition (and 
            (object-at ?point ?x ?old-y)
            (object-at ?piece ?x ?new-y)
            (is-large ?piece)
            (next-col ?old-y ?new-y)
            (faces-west ?piece)
            (not (iwp ?point))
            (not (is-inside ?point))
        )
        :effect (and 
            (not (object-at ?point ?x ?old-y))
            (object-at ?point ?x ?new-y)
            (object-in ?point ?piece)
            (is-inside ?point)
            (is-empty ?x ?old-y)
        )
    )

    ;point moves with large piece alone
    (:action move-point-with-large-piece-down
    
        :parameters (?point ?piece ?old-x ?new-x ?y)
        :precondition (and 
            (object-at ?point ?old-x ?y)
            (object-at ?piece ?old-x ?y)
            (is-large ?piece)
            (is-empty ?new-x ?y)
            (next-row ?old-x ?new-x)
            (not (faces-south ?piece))
            (not (iwp ?point))
        )
        :effect (and 
            (not (object-at ?point ?old-x ?y))
            (not (object-at ?piece ?old-x ?y))
            (object-at ?point ?new-x ?y)
            (object-at ?piece ?new-x ?y)
            (is-empty ?old-x ?y)
            (not(is-empty ?new-x ?y))
        )
    )

    (:action move-point-with-large-piece-up
        :parameters (?point ?piece ?old-x ?new-x ?y)
        :precondition (and 
            (object-at ?point ?old-x ?y)
            (object-at ?piece ?old-x ?y)
            (is-large ?piece)
            (is-empty ?new-x ?y)
            (next-row ?new-x ?old-x)
            (not (faces-north ?piece))
            (not (iwp ?point))
        )
        :effect (and 
            (not (object-at ?point ?old-x ?y))
            (not (object-at ?piece ?old-x ?y))
            (object-at ?point ?new-x ?y)
            (object-at ?piece ?new-x ?y)
            (is-empty ?old-x ?y)
            (not(is-empty ?new-x ?y))
        )
    )

    (:action move-point-with-large-piece-left
        :parameters (?point ?piece ?x ?old-y ?new-y)
        :precondition (and 
            (object-at ?point ?x ?old-y)
            (object-at ?piece ?x ?old-y)
            (is-large ?piece)
            (is-empty ?x ?new-y)
            (next-col ?new-y ?old-y)
            (not (faces-west ?piece))
            (not (iwp ?point))
        )
        :effect (and 
            (not (object-at ?point ?x ?old-y))
            (not (object-at ?piece ?x ?old-y))
            (object-at ?point ?x ?new-y)
            (object-at ?piece ?x ?new-y)
            (is-empty ?x ?old-y)
            (not (is-empty ?x ?new-y))
        )
    )
    
    (:action move-point-with-large-piece-right
        :parameters (?point ?piece ?x ?old-y ?new-y)
        :precondition (and 
            (object-at ?point ?x ?old-y)
            (object-at ?piece ?x ?old-y)
            (is-large ?piece)
            (is-empty ?x ?new-y)
            (next-col ?old-y ?new-y)
            (not (faces-east ?piece))
            (not (iwp ?point))
        )
        :effect (and 
            (not (object-at ?point ?x ?old-y))
            (not (object-at ?piece ?x ?old-y))
            (object-at ?point ?x ?new-y)
            (object-at ?piece ?x ?new-y)
            (is-empty ?x ?old-y)
            (not (is-empty ?x ?new-y))
        )
    )

    ;point moves out of large piece
    (:action move-point-out-of-large-piece-down
        :parameters (?point ?piece ?old-x ?new-x ?y)
        :precondition (and 
            (object-at ?point ?old-x ?y)
            (object-in ?point ?piece)
            (is-large ?piece)
            (is-empty ?new-x ?y)
            (next-row ?old-x ?new-x)
            (faces-south ?piece)
            (not (iwp ?point))
        )
        :effect (and 
            (not (object-at ?point ?old-x ?y))
            (not (object-in ?point ?piece))
            (object-at ?point ?new-x ?y)
            (not (is-inside ?point))
            (not (is-empty ?new-x ?y))
        )
    )

    (:action move-point-out-of-large-piece-up
        :parameters (?point ?piece ?old-x ?new-x ?y)
        :precondition (and 
            (object-at ?point ?old-x ?y)
            (object-in ?point ?piece)
            (is-large ?piece)
            (is-empty ?new-x ?y)
            (next-row ?new-x ?old-x)
            (faces-north ?piece)
            (not (iwp ?point))
        )
        :effect (and 
            (not (object-at ?point ?old-x ?y))
            (not (object-in ?point ?piece))
            (object-at ?point ?new-x ?y)
            (not (is-inside ?point))
            (not (is-empty ?new-x ?y))
        )
    )

    (:action move-point-out-of-large-piece-left
        :parameters (?point ?piece ?x ?old-y ?new-y)
        :precondition (and 
            (object-at ?point ?x ?old-y)
            (object-in ?point ?piece)
            (is-large ?piece)
            (is-empty ?x ?new-y)
            (next-col ?new-y ?old-y)
            (faces-west ?piece)
            (not (iwp ?point))
        )
        :effect (and 
            (not (object-at ?point ?x ?old-y))
            (not (object-in ?point ?piece))
            (object-at ?point ?x ?new-y)
            (not (is-inside ?point))
            (not (is-empty ?x ?new-y))
        )
    )
    
    (:action move-point-out-of-large-piece-right
        :parameters (?point ?piece ?x ?old-y ?new-y)
        :precondition (and 
            (object-at ?point ?x ?old-y)
            (object-in ?point ?piece)
            (is-large ?piece)
            (is-empty ?x ?new-y)
            (next-col ?old-y ?new-y)
            (faces-east ?piece)
            (not (iwp ?point))
        )
        :effect (and 
            (not (object-at ?point ?x ?old-y))
            (not (object-in ?point ?piece))
            (object-at ?point ?x ?new-y)
            (not (is-inside ?point))
            (not (is-empty ?x ?new-y))
        )
    )

    ;point moves with small piece in large piece
    (:action move-point-with-small-piece-in-large-piece-down
        :parameters (?point ?small-piece ?large-piece ?old-x ?new-x ?y)
        :precondition (and 
            (next-row ?old-x ?new-x)
            (object-at ?point ?old-x ?y)
            (object-at ?small-piece ?old-x ?y)
            (object-at ?large-piece ?new-x ?y)
            (object-in ?point ?small-piece)
            (is-small ?small-piece)
            (is-large ?large-piece)
            (not (faces-south ?small-piece))
            (faces-north ?large-piece)
            (not (iwp ?point))
            (iwp ?large-piece)
            (iwp ?small-piece)
        )
        :effect (and
            (not (object-at ?point ?old-x ?y))
            (not (object-at ?small-piece ?old-x ?y))
            (object-at ?point ?new-x ?y)
            (object-at ?small-piece ?new-x ?y)
            (object-in ?point ?large-piece)
            (object-in ?small-piece ?large-piece)
        )
    )

    (:action move-point-with-small-piece-in-large-piece-up
        :parameters (?point ?small-piece ?large-piece ?old-x ?new-x ?y)
        :precondition (and 
            (next-row ?new-x ?old-x)
            (object-at ?point ?old-x ?y)
            (object-at ?small-piece ?old-x ?y)
            (object-at ?large-piece ?new-x ?y)
            (object-in ?point ?small-piece)
            (not (faces-north ?small-piece))
            (faces-south ?large-piece)
            (not (iwp ?point))
            (iwp ?large-piece)
            (iwp ?small-piece)
            (is-small ?small-piece)
            (is-large ?large-piece)
        )
        :effect (and
            (not (object-at ?point ?old-x ?y))
            (not (object-at ?small-piece ?old-x ?y))
            (object-at ?point ?new-x ?y)
            (object-at ?small-piece ?new-x ?y)
            (object-in ?point ?large-piece)
            (object-in ?small-piece ?large-piece)
        )
    )

    (:action move-point-with-small-piece-in-large-piece-left
        :parameters (?point ?small-piece ?large-piece ?x ?old-y ?new-y)
        :precondition (and 
            (next-col ?new-y ?old-y)
            (object-at ?point ?x ?old-y)
            (object-at ?small-piece ?x ?old-y)
            (object-at ?large-piece ?x ?new-y)
            (object-in ?point ?small-piece)
            (not (faces-west ?small-piece))
            (faces-east ?large-piece)
            (not (iwp ?point))
            (iwp ?large-piece)
            (iwp ?small-piece)
            (is-small ?small-piece)
            (is-large ?large-piece)
        )
        :effect (and
            (not (object-at ?point ?x ?old-y))
            (not (object-at ?small-piece ?x ?old-y))
            (object-at ?point ?x ?new-y)
            (object-at ?small-piece ?x ?new-y)
            (object-in ?point ?large-piece)
            (object-in ?small-piece ?large-piece)
        )
    )

    (:action move-point-with-small-piece-in-large-piece-right
        :parameters (?point ?small-piece ?large-piece ?x ?old-y ?new-y)
        :precondition (and 
            (next-col ?old-y ?new-y)
            (object-at ?point ?x ?old-y)
            (object-at ?small-piece ?x ?old-y)
            (object-at ?large-piece ?x ?new-y)
            (object-in ?point ?small-piece)
            (not (faces-east ?small-piece))
            (faces-west ?large-piece)
            (not (iwp ?point))
            (iwp ?large-piece)
            (iwp ?small-piece)
            (is-small ?small-piece)
            (is-large ?large-piece)
        )
        :effect (and
            (not (object-at ?point ?x ?old-y))
            (not (object-at ?small-piece ?x ?old-y))
            (object-at ?point ?x ?new-y)
            (object-at ?small-piece ?x ?new-y)
            (object-in ?point ?large-piece)
            (object-in ?small-piece ?large-piece)
        )
    )

    ;point moves with small and large piece
    (:action move-point-with-small-and-large-piece-down
        :parameters (?point ?small-piece ?large-piece ?old-x ?new-x ?y)
        :precondition (and
            (object-at ?point ?old-x ?y)
            (object-at ?small-piece ?old-x ?y)
            (object-at ?large-piece ?old-x ?y)
            (object-in ?point ?small-piece)
            (object-in ?small-piece ?large-piece)
            (is-small ?small-piece)
            (is-large ?large-piece)
            (not (faces-south ?large-piece))
            (not (iwp ?point))
            (iwp ?large-piece)
            (iwp ?small-piece)
            (is-empty ?new-x ?y)
            (next-row ?old-x ?new-x)
        )
        :effect (and 
            (not (object-at ?point ?old-x ?y))
            (not (object-at ?small-piece ?old-x ?y))
            (not (object-at ?large-piece ?old-x ?y))
            (object-at ?point ?new-x ?y)
            (object-at ?small-piece ?new-x ?y)
            (object-at ?large-piece ?new-x ?y)
            (is-empty ?old-x ?y)
            (not (is-empty ?new-x ?y))
        )
    )

    (:action move-point-with-small-and-large-piece-up
        :parameters (?point ?small-piece ?large-piece ?old-x ?new-x ?y)
        :precondition (and
            (object-at ?point ?old-x ?y)
            (object-at ?small-piece ?old-x ?y)
            (object-at ?large-piece ?old-x ?y)
            (object-in ?point ?small-piece)
            (object-in ?small-piece ?large-piece)
            (is-small ?small-piece)
            (is-large ?large-piece)
            (not (faces-north ?large-piece))
            (not (iwp ?point))
            (iwp ?large-piece)
            (iwp ?small-piece)
            (is-empty ?new-x ?y)
            (next-row ?new-x ?old-x)
        )
        :effect (and 
            (not (object-at ?point ?old-x ?y))
            (not (object-at ?small-piece ?old-x ?y))
            (not (object-at ?large-piece ?old-x ?y))
            (object-at ?point ?new-x ?y)
            (object-at ?small-piece ?new-x ?y)
            (object-at ?large-piece ?new-x ?y)
            (is-empty ?old-x ?y)
            (not (is-empty ?new-x ?y))
        )
    )
        
    (:action move-point-with-small-and-large-piece-left
        :parameters (?point ?small-piece ?large-piece ?x ?old-y ?new-y)
        :precondition (and 
            (next-col ?new-y ?old-y)
            (object-at ?point ?x ?old-y)
            (object-at ?small-piece ?x ?old-y)
            (object-at ?large-piece ?x ?old-y)
            (object-in ?point ?small-piece)
            (object-in ?small-piece ?large-piece)
            (is-small ?small-piece)
            (is-large ?large-piece)
            (not (faces-east ?large-piece))
            (not (iwp ?point))
            (iwp ?large-piece)
            (iwp ?small-piece)
            (is-empty ?x ?new-y)
        )
        :effect (and
            (not (object-at ?point ?x ?old-y))
            (not (object-at ?small-piece ?x ?old-y))
            (not (object-at ?large-piece ?x ?old-y))
            (object-at ?point ?x ?new-y)
            (object-at ?small-piece ?x ?new-y)
            (object-at ?large-piece ?x ?new-y)
            (is-empty ?x ?old-y)
            (not (is-empty ?x ?new-y))
        )
    )
        
    (:action move-point-with-small-and-large-piece-right
        :parameters (?point ?small-piece ?large-piece ?x ?old-y ?new-y)
        :precondition (and 
            (next-col ?old-y ?new-y)
            (object-at ?point ?x ?old-y)
            (object-at ?small-piece ?x ?old-y)
            (object-at ?large-piece ?x ?old-y)
            (object-in ?point ?small-piece)
            (object-in ?small-piece ?large-piece)
            (is-small ?small-piece)
            (is-large ?large-piece)
            (not (faces-west ?large-piece))
            (not (iwp ?point))
            (iwp ?large-piece)
            (iwp ?small-piece)
            (is-empty ?x ?new-y)
        )
        :effect (and
            (not (object-at ?point ?x ?old-y))
            (not (object-at ?small-piece ?x ?old-y))
            (not (object-at ?large-piece ?x ?old-y))
            (object-at ?point ?x ?new-y)
            (object-at ?small-piece ?x ?new-y)
            (object-at ?large-piece ?x ?new-y)
            (is-empty ?x ?old-y)
            (not (is-empty ?x ?new-y))
        )
    )

    ;move point with small piece out of large piece
    (:action move-point-with-small-piece-out-of-large-piece-down
        :parameters (?point ?small-piece ?large-piece ?old-x ?new-x ?y)
        :precondition(and
            (next-row ?old-x ?new-x)
            (is-empty ?new-x ?y)
            (object-at ?point ?old-x ?y)
            (object-at ?small-piece ?old-x ?y)
            (object-at ?large-piece ?old-x ?y)
            (object-in ?point ?small-piece)
            (object-in ?small-piece ?large-piece)
            (is-small ?small-piece)
            (is-large ?large-piece)
            (not (iwp ?point))
            (iwp ?large-piece)
            (iwp ?small-piece)
            (faces-south ?large-piece)
        )
        :effect(and
            (not (object-at ?point ?old-x ?y))
            (not (object-at ?small-piece ?old-x ?y))
            (not (is-empty ?new-x ?y))
            (not (object-in ?point ?large-piece))
            (not (object-in ?small-piece ?large-piece))
            (object-at ?point ?new-x ?y)
            (object-at ?small-piece ?new-x ?y)
        )
    )
    
    (:action move-point-with-small-piece-out-of-large-piece-up
        :parameters (?point ?small-piece ?large-piece ?old-x ?new-x ?y)
        :precondition(and
            (next-row ?new-x ?old-x)
            (is-empty ?new-x ?y)
            (object-at ?point ?old-x ?y)
            (object-at ?small-piece ?old-x ?y)
            (object-at ?large-piece ?old-x ?y)
            (object-in ?point ?small-piece)
            (object-in ?small-piece ?large-piece)
            (is-small ?small-piece)
            (is-large ?large-piece)
            (not (iwp ?point))
            (iwp ?large-piece)
            (iwp ?small-piece)
            (faces-north ?large-piece)
        )
        :effect(and
            (not (object-at ?point ?old-x ?y))
            (not (object-at ?small-piece ?old-x ?y))
            (not (is-empty ?new-x ?y))
            (not (object-in ?point ?large-piece))
            (not (object-in ?small-piece ?large-piece))
            (object-at ?point ?new-x ?y)
            (object-at ?small-piece ?new-x ?y)
        )
    )

    (:action move-point-with-small-piece-out-of-large-piece-left
        :parameters (?point ?small-piece ?large-piece ?x ?old-y ?new-y)
        :precondition(and
            (next-col ?new-y ?old-y)
            (is-empty ?x ?new-y)
            (object-at ?point ?x ?old-y)
            (object-at ?small-piece ?x ?old-y)
            (object-at ?large-piece ?x ?old-y)
            (object-in ?point ?small-piece)
            (object-in ?small-piece ?large-piece)
            (is-small ?small-piece)
            (is-large ?large-piece)
            (not (iwp ?point))
            (iwp ?large-piece)
            (iwp ?small-piece)
            (faces-east ?large-piece)
        )
        :effect(and
            (not (object-at ?point ?x ?old-y))
            (not (object-at ?small-piece ?x ?old-y))
            (not (is-empty ?x ?new-y))
            (not (object-in ?point ?large-piece))
            (not (object-in ?small-piece ?large-piece))
            (object-at ?point ?x ?new-y)
            (object-at ?small-piece ?x ?new-y)
        )
    )
        
        (:action move-point-with-small-piece-out-of-large-piece-right
            :parameters (?point ?small-piece ?large-piece ?x ?old-y ?new-y)
            :precondition(and
                (next-col ?old-y ?new-y)
                (is-empty ?x ?new-y)
                (object-at ?point ?x ?old-y)
                (object-at ?small-piece ?x ?old-y)
                (object-at ?large-piece ?x ?old-y)
                (object-in ?point ?small-piece)
                (object-in ?small-piece ?large-piece)
                (is-small ?small-piece)
                (is-large ?large-piece)
                (not (iwp ?point))
                (iwp ?large-piece)
                (iwp ?small-piece)
                (faces-west ?large-piece)
            )
            :effect(and
                (not (object-at ?point ?x ?old-y))
                (not (object-at ?small-piece ?x ?old-y))
                (not (is-empty ?x ?new-y))
                (not (object-in ?point ?large-piece))
                (not (object-in ?small-piece ?large-piece))
                (object-at ?point ?x ?new-y)
                (object-at ?small-piece ?x ?new-y)
            )
        )
)